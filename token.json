[
  {
    "type": "bullet_list_open",
    "tag": "ul",
    "attrs": null,
    "map": [
      0,
      9
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      0,
      1
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      0,
      1
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      0,
      1
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#for-attributes-use-data-"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "For Attributes use data-*",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[For Attributes use data-*](#for-attributes-use-data-)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      1,
      2
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      1,
      2
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      1,
      2
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#updating-css-variables"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Updating CSS Variables",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Updating CSS Variables](#updating-css-variables)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      2,
      3
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      2,
      3
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      2,
      3
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#get-slot-elements"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Get slot elements",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Get slot elements](#get-slot-elements)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      3,
      4
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      3,
      4
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      3,
      4
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#reason-to-use-disconnectedcallback"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Reason to use disconnectedCallback()",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Reason to use disconnectedCallback()](#reason-to-use-disconnectedcallback)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      4,
      5
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      4,
      5
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      4,
      5
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#need-a-uuid"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Need a UUID",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Need a UUID](#need-a-uuid)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      5,
      6
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      5,
      6
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      5,
      6
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#adding-css-once-for-non-shadow-dom-elements"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Adding CSS once for non-shadow DOM Elements",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Adding CSS once for non-shadow DOM Elements](#adding-css-once-for-non-shadow-dom-elements)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      6,
      9
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      6,
      7
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      6,
      7
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "link_open",
        "tag": "a",
        "attrs": [
          [
            "href",
            "#check-if-a-custom-element-is-defined"
          ]
        ],
        "map": null,
        "nesting": 1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 1,
        "children": null,
        "content": "Check if a custom element is defined",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "link_close",
        "tag": "a",
        "attrs": null,
        "map": null,
        "nesting": -1,
        "level": 0,
        "children": null,
        "content": "",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "[Check if a custom element is defined](#check-if-a-custom-element-is-defined)",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "bullet_list_close",
    "tag": "ul",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "hr",
    "tag": "hr",
    "attrs": null,
    "map": [
      9,
      10
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "***",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      12,
      13
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      12,
      13
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "For Attributes use data-*",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "For Attributes use data-*",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      14,
      15
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      14,
      15
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "While this is not required, it can be suggested to use ",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "code_inline",
        "tag": "code",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "data-*",
        "markup": "`",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": " for ",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "code_inline",
        "tag": "code",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "observedAttributes()",
        "markup": "`",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      },
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": ".  While you can use any attribute name of your choosing, try sticking to using HTML standards.",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "While this is not required, it can be suggested to use `data-*` for `observedAttributes()`.  While you can use any attribute name of your choosing, try sticking to using HTML standards.",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      16,
      32
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "static get observedAttributes() {\n  return ['data-selected']\n}\n\nattributeChangedCallback(attr, oldValue, newValue) {\n  if (oldValue !== newValue) {\n    this.render()\n  }\n}\n\nrender() {\n  const isSelected = this.getAttribute('data-selected') === 'true'\n  this.currentTab.classList.toggle('selected', isSelected)\n}\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      33,
      34
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      33,
      34
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Updating CSS Variables",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Updating CSS Variables",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      35,
      36
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      35,
      36
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Maybe you have to set a custom variable for your component.  If you want to find a particular css variable you wan to update for any reason, here is a snippet to help.",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Maybe you have to set a custom variable for your component.  If you want to find a particular css variable you wan to update for any reason, here is a snippet to help.",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      37,
      44
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "<style>\n:host {\n  --tabs-width: 100px;\n}\n</style>\n",
    "markup": "```",
    "info": "css",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      45,
      63
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "this.rootStyle = this.findCSSSelectorText(this.shadowRoot, ':host')\nthis.rootStyle.style.setProperty('--tabs-width', `${newVal}%`)\n\nfindCSSSelectorText(element, selector) {\n    let result\n    const sheets = [...element.styleSheets]\n    const len = sheets.length\n    for (let i = 0; i < len; i++) {\n      result = [...sheets[i].cssRules].find(rule => rule.selectorText === selector)\n      if (result) {\n        break\n      }\n    }\n    return result\n  }\n\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      64,
      65
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      64,
      65
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Get slot elements",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Get slot elements",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      66,
      67
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      66,
      67
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Being able to select slot items will be important.",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Being able to select slot items will be important.",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      68,
      76
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": " <h-tabs>\n    <button slot=\"navigation\">Tab1</button>\n    <button slot=\"navigation\">Tab2</button>\n    <section>Tab 1</section>\n    <section>Tab 2</section>\n</h-tabs>\n",
    "markup": "```",
    "info": "html",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      77,
      78
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      77,
      78
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Html for _generateTemplate()",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Html for _generateTemplate()",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      78,
      86
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "<div class=\"tab-navigation\">\n  <slot id=\"tabSlot\" name=\"navigation\"></slot>\n</div>\n<div id=\"tabPanel\" class=\"tab-panel\">\n  <slot id=\"panelSlot\"></slot>\n</div>\n",
    "markup": "```",
    "info": "html",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      87,
      102
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "constructor() {\n    super()\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    shadowRoot.appendChild(this._generateTemplate().content.cloneNode(true))\n    this.$tabSlot = this.shadowRoot.querySelector('#tabSlot')\n    this.$panelSlot = this.shadowRoot.querySelector('#panelSlot')\n   \n    this.$tabSlot.addEventListener('slotchange', () => {\n      this.$tabs = this.$tabSlot.assignedNodes({ flatten: true })\n      this.$panels = this.$panelSlot.assignedNodes({ flatten: true })\n        .filter(el => el.nodeType === Node.ELEMENT_NODE)\n    })\n}\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      103,
      104
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      103,
      104
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Reason to use disconnectedCallback()",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Reason to use disconnectedCallback()",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      105,
      106
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      105,
      106
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "If you have attached an event listener to the window/document or element outside of the scope of the custom element, such as a tool-tip, you must remove the event listener.  You must reference the function in order for the remove to be done correctly",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "If you have attached an event listener to the window/document or element outside of the scope of the custom element, such as a tool-tip, you must remove the event listener.  You must reference the function in order for the remove to be done correctly",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "blockquote_open",
    "tag": "blockquote",
    "attrs": null,
    "map": [
      107,
      108
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": ">",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      107,
      108
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      107,
      108
    ],
    "nesting": 0,
    "level": 2,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Note that any events you attached within the custom element does not need to be removed because when the element is removed from the DOM, so are the event listeners attached",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Note that any events you attached within the custom element does not need to be removed because when the element is removed from the DOM, so are the event listeners attached",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "blockquote_close",
    "tag": "blockquote",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": ">",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      109,
      123
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "constructor() {\n    super()\n    this._isActivatedBind = this._isActivated.bind(this)\n  }\n\n  connectedCallback() {\n    window.addEventListener('focus', this._isActivatedBind)\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('focus', this._isActivatedBind)\n  }\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      124,
      125
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      124,
      125
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Need a UUID",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Need a UUID",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      126,
      129
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "const uuid = new Date().getTime().toString(36) + performance.now().toString().replace(/[^0-9]/g, '')\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      130,
      131
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      130,
      131
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Adding CSS once for non-shadow DOM Elements",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Adding CSS once for non-shadow DOM Elements",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      132,
      154
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "_insertStyle() {\n    const style = `\n    <style type=\"text/css\" id=\"${name}-style\">\n      ${name} p {\n        border: 1px solid var(--${name}-border-color, #111);\n        border-radius: 2px;\n        display: flex;\n        justify-content: space-between;\n      }\n    </style>`\n    const elem = document.head || this.parentElement || this\n    if (!elem.querySelector('#${name}-style')) {\n      elem.insertAdjacentHTML('afterbegin', style)\n    }\n  }\n\nconnectedCallback() {\n  this._insertStyle()\n  this._generateTemplate()\n}\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_open",
    "tag": "h1",
    "attrs": null,
    "map": [
      155,
      156
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      155,
      156
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Check if a custom element is defined",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Check if a custom element is defined",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "heading_close",
    "tag": "h1",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "#",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "bullet_list_open",
    "tag": "ul",
    "attrs": null,
    "map": [
      157,
      159
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "list_item_open",
    "tag": "li",
    "attrs": null,
    "map": [
      157,
      159
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      157,
      158
    ],
    "nesting": 1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      157,
      158
    ],
    "nesting": 0,
    "level": 3,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 2,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": true
  },
  {
    "type": "list_item_close",
    "tag": "li",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "bullet_list_close",
    "tag": "ul",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "-",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      159,
      164
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "if(window.customElements.get('my-custom-eleemnt')) {\n  ...\n}\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      165,
      166
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      165,
      166
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Promise based",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Promise based",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      166,
      171
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "window.customElements.whenDefined('my-custom-eleemnt').then(() => {\n   ...\n})\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      172,
      173
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      172,
      173
    ],
    "nesting": 0,
    "level": 1,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "If you want to check all custom elements are defined",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "If you want to check all custom elements are defined",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "blockquote_open",
    "tag": "blockquote",
    "attrs": null,
    "map": [
      174,
      175
    ],
    "nesting": 1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": ">",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_open",
    "tag": "p",
    "attrs": null,
    "map": [
      174,
      175
    ],
    "nesting": 1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "inline",
    "tag": "",
    "attrs": null,
    "map": [
      174,
      175
    ],
    "nesting": 0,
    "level": 2,
    "children": [
      {
        "type": "text",
        "tag": "",
        "attrs": null,
        "map": null,
        "nesting": 0,
        "level": 0,
        "children": null,
        "content": "Note that is one is not defined, the promise will never resolve",
        "markup": "",
        "info": "",
        "meta": null,
        "block": false,
        "hidden": false
      }
    ],
    "content": "Note that is one is not defined, the promise will never resolve",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "paragraph_close",
    "tag": "p",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 1,
    "children": null,
    "content": "",
    "markup": "",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "blockquote_close",
    "tag": "blockquote",
    "attrs": null,
    "map": null,
    "nesting": -1,
    "level": 0,
    "children": null,
    "content": "",
    "markup": ">",
    "info": "",
    "meta": null,
    "block": true,
    "hidden": false
  },
  {
    "type": "fence",
    "tag": "code",
    "attrs": null,
    "map": [
      176,
      188
    ],
    "nesting": 0,
    "level": 0,
    "children": null,
    "content": "function customElementsDefined() {\n  const undefinedElements = document.querySelectorAll(':not(:defined)')\n  return Promise.all([...undefinedElements].map(\n    elem => window.customElements.whenDefined(elem.localName)\n  ))\n}\n\n// use\nawait customElementsDefined()\n// all elements Defined\n",
    "markup": "```",
    "info": "js",
    "meta": null,
    "block": true,
    "hidden": false
  }
]